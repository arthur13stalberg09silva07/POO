# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '20'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
          
    - uses: mr-smithers-excellent/docker-build-push@v6
      name: Build & push Docker image
      with:
        image: arthurstalberg/javabergolito
        tags: v1, latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Git Version
  # You may pin to the exact commit or the version.
  # uses: codacy/git-version@fa06788276d7492a2af01662649696d249ecf4cb
      uses: codacy/git-version@2.4.0
      with:
    # The name of the release branch
        release-branch: master # default is master
    # The name of the dev branch
        dev-branch: dev # default is dev
    # The prefix to use in the version
        prefix: optional # optional
    # The paths to be used to calculate changes (comma-separated)
        log-paths: ./ # optional, default is ./
          
